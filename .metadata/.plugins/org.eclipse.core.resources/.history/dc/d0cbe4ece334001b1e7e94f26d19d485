package class_41;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.PriorityQueue;

public class Client {

	public static void main(String[] args) {
		Heap h = new Heap();
        h.add(10);
        h.add(30);
        h.add(9);
        h.add(15);
        h.add(40);
        h.display();
        System.out.println();
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        pq.add(10);
        pq.add(30);
        pq.add(9);
        pq.add(15);
        pq.add(40);
        pq.remove();  // only remove
        System.out.println(pq.peek()); //   peek value
        System.out.println(pq.poll()); // remove and return
        Iterator it = pq.iterator();
        while(it.hasNext()){
        	System.out.print(it.next()+" ");
        }
        System.out.println("-------");
//        int[] nums = {3,2,3,1,2,4,5,5,6};
//       System.out.println(findKthLargest(nums,4));
        int[] nums = {4,3,2,6,5,7,1,2};
       System.out.println(minCost(nums));
	}
	
	public static int minCost(int[] nums) {
		 PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
	        for(int i=0;i<nums.length;i++){
	            pq.add(nums[i]);
	        }
	        ArrayList<Integer> arr = new ArrayList<>();
        while(pq.size() >1) {
        	int temp = pq.poll();
        	
        	if(arr.size()<3) {
        		arr.add(temp);
        	}
        	if(arr.size() ==2) {
        		int sum = 0;
        		for(int k:arr) {
        			sum +=k;
        		}
        		pq.add(sum);
        		for(int l=0;l<arr.size();l++) {
        			arr.remove(l);
        		}
        	}
        }
        return pq.peek();
	}
	 public static int findKthLargest(int[] nums, int k) {
	        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
	        for(int i=0;i<k;i++){
	            pq.add(nums[i]);
	        }
	        for(int j=k;j<nums.length;j++){
	            if(pq.peek()<nums[j]){
	                pq.remove();
	                pq.add(nums[j]);
	            }
	        }
	        return pq.peek();
	        
	    }

}
