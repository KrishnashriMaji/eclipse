package geekster;

import java.util.ArrayList;

public class Test {

	public static void main(String[] args) {
		String haystack = "aab";
		
		//System.out.println(reorganizeString(haystack));
//		reorganizeString(haystack);
		compression("aaabbac");
		

	}
	
	public static void compression(String S) {
		int count = 0;
		int total = 0;
		StringBuilder sb = new StringBuilder("");
		for(int i=0;i<S.length();i++) {
			char cc = S.charAt(i);
			if(i != S.length()-1) {
				char nn = S.charAt(i+1);
				if(cc == nn) {
					count++;
				}else {
					count++;
					sb.append(cc +""+ (count));
				    total =total +2;
					count = 0;
				}
			}else {
				count++;
				total =total +2;
				sb.append(cc +""+ (count));
			}
			
		}
		System.out.println(total);
	}
	
	public static String reorganizeString(String S) {
        ArrayList<String> list = permutation(S);
//        System.out.println(list);
        for(String sr:list){
            int middle = sr.length()/2;
            String prefix = sr.substring(0,middle);
            String suffix = sr.substring(middle+1);
            if(prefix.equals(suffix)){
                return sr;
            }
        }
        return "";
    }
	    
	 public static ArrayList<String> permutation(String s){
	        if(s.length() == 0){
	            ArrayList<String> ss = new ArrayList<>();
	            ss.add("");
	            return ss;
	        }
	        char f = s.charAt(0);
	        String res = s.substring(1);
	        ArrayList<String> rr = permutation(res);
	        ArrayList<String> nn = new ArrayList<>();
	        for(String sr: rr){
	            for(int i=0;i<=sr.length();i++){
	                String prefix = sr.substring(0,i);
	                String suffix = sr.substring(i);
	                nn.add(prefix + f + suffix);
	            }
	        }
	        return nn;
	    }     
	 	
	 public static ArrayList<String> getKpc(String s){
		 if(s.length() == 0) {
			 ArrayList<String> new_arr = new ArrayList<>();
			 new_arr.add("");
			 return new_arr;
		 }
		 
		 char ch = s.charAt(0);
		 String res = s.substring(ch);
		 ArrayList<String> rr = getKpc(res);
		 ArrayList<String> nw = new ArrayList<>();
		 String res_str = getChoice(ch);
		 for(String a : rr) {
			 for(int i =0;i<res_str.length();i++) {
				 nw.add(res_str.charAt(i) + a);
			 }
		 }
		 return nw;
	 }
	 
	 public static String getChoice(char key) {
			if (key == '1') {
				return "abc";
			}
			if (key == '2') {
				return "def";
			}
			if (key == '3') {
				return "ghi";
			}
			if (key == '4') {
				return "jkl";
			}
			if (key == '5') {
				return "mno";
			}
			if (key == '6') {
				return "pqrs";
			}
			if (key == '7') {
				return "tuv";
			}
			if (key == '8') {
				return "wx";
			}
			if (key == '9') {
				return "yz";
			}
			if (key == '0') {
				return ".;";
			}
			return "";
		}
}
