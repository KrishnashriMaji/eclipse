package class33;

import java.util.*;

import class33.GenericTree.Node;

public class Test1 {
	class Node{
		int data;
		ArrayList<Node> children = new ArrayList<>();
	}
	private int size;
	private Node root;
	
	Test1(int[] arr){
		Stack<Node> st = new Stack<>();
		
		for(int i =0;i<arr.length;i++) {
			if(arr[i] == -1) {
				st.pop();
			}else {
				Node node = new Node();
				node.data = arr[i];
				this.size++;
				if(st.size()>0) {
					st.peek().children.add(node);
				}else {
					this.root = node;
				}
				st.push(node);
			}
		}
		
	}
	
	public void display() {
		display(this.root);
	}
	
	private void display(Node root) {
		System.out.print(root.data +"---->");
		for(Node n : root.children) {
			System.out.print(n.data+", ");
		}
		System.out.println(".");
		for(Node c:root.children) {
			display(c);
		}
	}
	
	public int size2() {
		return size2(this.root);
	}
	private int size2(Node root) {
		int size = 0;
		for (Node child : root.children) {
			int csize = size2(child);
			size += csize;
		}

		size++;
		return size;
	}

}
