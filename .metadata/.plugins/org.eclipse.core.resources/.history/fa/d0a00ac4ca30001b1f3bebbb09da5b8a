package Class38;

import java.util.Arrays;

public class Client {

	public static void main(String[] args) {
		int[] arr = {12,25,37,50,62,75,87};
		int[] arr2= {1,2,4,5,6,8,9};
		BST bst = new BST(arr2);
//		bst.display();
//		System.out.println(bst.pir(87));
//		bst.pir(800, 1000);
//		System.out.println("-------------------");
//		bst.replaceWithSumofLargerNodes();
//		bst.display();
		int[] nums = {3,3,3,4,5};
		System.out.println(canPartition(nums));
		
		
	}
	
	public static boolean canPartition(int[] nums) {
        if(nums.length<2){
            return false;
        }else if(nums.length == 2){
            if(nums[0] == nums[1]){
                return true;
            }else{
                return false;
            }
        }
        int sum1 = 0;
        int sum2 = 0;
        Arrays.sort(nums);
        int start = 0;
        int end= nums[nums.length-2];
         for(int i=1;i<nums.length;i++){
                nums[i] = nums[i]+nums[i-1];
            }
        
        while(end>0){
            sum1 = nums[end];
            sum2 = nums[nums.length-1] - nums[end];
            
            if(sum1 == sum2){
                return true;
            }
            end--;
        }
        return false;
    }
}
